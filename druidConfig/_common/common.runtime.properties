#
# Druid - a distributed column store.
# Copyright 2012 - 2015 Metamarkets Group Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Extensions (no deep storage model is listed - using local fs for deep storage - not recommended for production)
# Also, for production to use mysql add, "io.druid.extensions:mysql-metadata-storage"
druid.extensions.coordinates=["io.druid.extensions:druid-histogram", "io.druid.extensions:mysql-metadata-storage", "io.druid.extensions:druid-hdfs-storage"]
druid.extensions.localRepository=extensions-repo

# Zookeeper
druid.zk.service.host=zkHost
druid.zk.paths.base=/druid/prod
druid.discovery.curator.path=/druid/prod/discovery

# Request logging, monitoring, and metrics
druid.request.logging.type=emitter
druid.request.logging.feed=druid_requests

# Metadata Storage (use something like mysql in production by uncommenting properties below)
# by default druid will use derby
druid.metadata.storage.type=mysql
druid.metadata.storage.connector.connectURI=jdbc:mysql://mysqlHost/druid
druid.metadata.storage.connector.user=druid
druid.metadata.storage.connector.password=druid

# Deep storage (local filesystem for examples - don't use this in production)
druid.storage.type=hdfs
druid.storage.storageDirectory=hdfs://hdfsHost/druid/storage

# Query Cache (we use a simple 10mb heap-based local cache on the broker)
druid.cache.type=local
druid.cache.sizeInBytes=536870912

# Indexing service discovery
druid.selectors.indexing.serviceName=druid:prod:overlord

# Coordinator Service Discovery
druid.selectors.coordinator.serviceName=druid:prod:coordinator

# Monitoring (disabled for examples, if you enable SysMonitor, make sure to include sigar jar in your cp)
# druid.monitoring.monitors=["com.metamx.metrics.SysMonitor","com.metamx.metrics.JvmMonitor"]
druid.monitoring.monitors=["com.metamx.metrics.JvmMonitor"]

# Metrics logging (disabled for examples - change this to logging or http in production)
druid.emitter=logging
d.emitter.logging.logLevel=warn